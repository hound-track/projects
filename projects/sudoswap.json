{
  "name": "Sudoswap",
  "description": "the decentralized NFT marketplace",
  "url": "https://sudoswap.xyz/#/",
  "image": "https://avatars.githubusercontent.com/u/94413972?s=200&v=4",
  "contracts": {
    "1": [
      {
        "name": "EXPONENTIAL_CURVE",
        "address": "0x432f962D8209781da23fB37b6B59ee15dE7d9841",
        "abi": [
          {
            "inputs": [],
            "name": "MIN_PRICE",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "spotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "delta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "numItems",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "feeMultiplier",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFeeMultiplier",
                "type": "uint256"
              }
            ],
            "name": "getBuyInfo",
            "outputs": [
              {
                "internalType": "enum CurveErrorCodes.Error",
                "name": "error",
                "type": "uint8"
              },
              {
                "internalType": "uint128",
                "name": "newSpotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "newDelta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "inputValue",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFee",
                "type": "uint256"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "spotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "delta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "numItems",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "feeMultiplier",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFeeMultiplier",
                "type": "uint256"
              }
            ],
            "name": "getSellInfo",
            "outputs": [
              {
                "internalType": "enum CurveErrorCodes.Error",
                "name": "error",
                "type": "uint8"
              },
              {
                "internalType": "uint128",
                "name": "newSpotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "newDelta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "outputValue",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFee",
                "type": "uint256"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "delta",
                "type": "uint128"
              }
            ],
            "name": "validateDelta",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "newSpotPrice",
                "type": "uint128"
              }
            ],
            "name": "validateSpotPrice",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          }
        ]
      },
      {
        "name": "LINEAR_CURVE",
        "address": "0x5B6aC51d9B1CeDE0068a1B26533CAce807f883Ee",
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "spotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "delta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "numItems",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "feeMultiplier",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFeeMultiplier",
                "type": "uint256"
              }
            ],
            "name": "getBuyInfo",
            "outputs": [
              {
                "internalType": "enum CurveErrorCodes.Error",
                "name": "error",
                "type": "uint8"
              },
              {
                "internalType": "uint128",
                "name": "newSpotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "newDelta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "inputValue",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFee",
                "type": "uint256"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "spotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "delta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "numItems",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "feeMultiplier",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFeeMultiplier",
                "type": "uint256"
              }
            ],
            "name": "getSellInfo",
            "outputs": [
              {
                "internalType": "enum CurveErrorCodes.Error",
                "name": "error",
                "type": "uint8"
              },
              {
                "internalType": "uint128",
                "name": "newSpotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "newDelta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "outputValue",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFee",
                "type": "uint256"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "",
                "type": "uint128"
              }
            ],
            "name": "validateDelta",
            "outputs": [
              {
                "internalType": "bool",
                "name": "valid",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "",
                "type": "uint128"
              }
            ],
            "name": "validateSpotPrice",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          }
        ]
      },
      {
        "name": "XYK_CURVE",
        "address": "0x7942E264e21C5e6CbBA45fe50785a15D3BEb1DA0",
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "spotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "delta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "numItems",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "feeMultiplier",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFeeMultiplier",
                "type": "uint256"
              }
            ],
            "name": "getBuyInfo",
            "outputs": [
              {
                "internalType": "enum CurveErrorCodes.Error",
                "name": "error",
                "type": "uint8"
              },
              {
                "internalType": "uint128",
                "name": "newSpotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "newDelta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "inputValue",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFee",
                "type": "uint256"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "spotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "delta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "numItems",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "feeMultiplier",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFeeMultiplier",
                "type": "uint256"
              }
            ],
            "name": "getSellInfo",
            "outputs": [
              {
                "internalType": "enum CurveErrorCodes.Error",
                "name": "error",
                "type": "uint8"
              },
              {
                "internalType": "uint128",
                "name": "newSpotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "newDelta",
                "type": "uint128"
              },
              {
                "internalType": "uint256",
                "name": "outputValue",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "protocolFee",
                "type": "uint256"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "delta",
                "type": "uint128"
              }
            ],
            "name": "validateDelta",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint128",
                "name": "newSpotPrice",
                "type": "uint128"
              }
            ],
            "name": "validateSpotPrice",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          }
        ]
      },
      {
        "name": "PAIR_FACTORY",
        "address": "0xb16c1342E617A5B6E4b631EB114483FDB289c0A4",
        "abi": [
          {
            "inputs": [
              {
                "internalType": "contract LSSVMPairEnumerableETH",
                "name": "_enumerableETHTemplate",
                "type": "address"
              },
              {
                "internalType": "contract LSSVMPairMissingEnumerableETH",
                "name": "_missingEnumerableETHTemplate",
                "type": "address"
              },
              {
                "internalType": "contract LSSVMPairEnumerableERC20",
                "name": "_enumerableERC20Template",
                "type": "address"
              },
              {
                "internalType": "contract LSSVMPairMissingEnumerableERC20",
                "name": "_missingEnumerableERC20Template",
                "type": "address"
              },
              {
                "internalType": "address payable",
                "name": "_protocolFeeRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_protocolFeeMultiplier",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "contract ICurve",
                "name": "bondingCurve",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "isAllowed",
                "type": "bool"
              }
            ],
            "name": "BondingCurveStatusUpdate",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "target",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "isAllowed",
                "type": "bool"
              }
            ],
            "name": "CallTargetStatusUpdate",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "poolAddress",
                "type": "address"
              }
            ],
            "name": "NFTDeposit",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "poolAddress",
                "type": "address"
              }
            ],
            "name": "NewPair",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "newMultiplier",
                "type": "uint256"
              }
            ],
            "name": "ProtocolFeeMultiplierUpdate",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "recipientAddress",
                "type": "address"
              }
            ],
            "name": "ProtocolFeeRecipientUpdate",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "contract LSSVMRouter",
                "name": "router",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "isAllowed",
                "type": "bool"
              }
            ],
            "name": "RouterStatusUpdate",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "poolAddress",
                "type": "address"
              }
            ],
            "name": "TokenDeposit",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "contract ICurve",
                "name": "",
                "type": "address"
              }
            ],
            "name": "bondingCurveAllowed",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "callAllowed",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_protocolFeeMultiplier",
                "type": "uint256"
              }
            ],
            "name": "changeProtocolFeeMultiplier",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address payable",
                "name": "_protocolFeeRecipient",
                "type": "address"
              }
            ],
            "name": "changeProtocolFeeRecipient",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "contract ERC20",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "contract IERC721",
                    "name": "nft",
                    "type": "address"
                  },
                  {
                    "internalType": "contract ICurve",
                    "name": "bondingCurve",
                    "type": "address"
                  },
                  {
                    "internalType": "address payable",
                    "name": "assetRecipient",
                    "type": "address"
                  },
                  {
                    "internalType": "enum LSSVMPair.PoolType",
                    "name": "poolType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint128",
                    "name": "delta",
                    "type": "uint128"
                  },
                  {
                    "internalType": "uint96",
                    "name": "fee",
                    "type": "uint96"
                  },
                  {
                    "internalType": "uint128",
                    "name": "spotPrice",
                    "type": "uint128"
                  },
                  {
                    "internalType": "uint256[]",
                    "name": "initialNFTIDs",
                    "type": "uint256[]"
                  },
                  {
                    "internalType": "uint256",
                    "name": "initialTokenBalance",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct LSSVMPairFactory.CreateERC20PairParams",
                "name": "params",
                "type": "tuple"
              }
            ],
            "name": "createPairERC20",
            "outputs": [
              {
                "internalType": "contract LSSVMPairERC20",
                "name": "pair",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract IERC721",
                "name": "_nft",
                "type": "address"
              },
              {
                "internalType": "contract ICurve",
                "name": "_bondingCurve",
                "type": "address"
              },
              {
                "internalType": "address payable",
                "name": "_assetRecipient",
                "type": "address"
              },
              {
                "internalType": "enum LSSVMPair.PoolType",
                "name": "_poolType",
                "type": "uint8"
              },
              {
                "internalType": "uint128",
                "name": "_delta",
                "type": "uint128"
              },
              {
                "internalType": "uint96",
                "name": "_fee",
                "type": "uint96"
              },
              {
                "internalType": "uint128",
                "name": "_spotPrice",
                "type": "uint128"
              },
              {
                "internalType": "uint256[]",
                "name": "_initialNFTIDs",
                "type": "uint256[]"
              }
            ],
            "name": "createPairETH",
            "outputs": [
              {
                "internalType": "contract LSSVMPairETH",
                "name": "pair",
                "type": "address"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract ERC20",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "depositERC20",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract IERC721",
                "name": "_nft",
                "type": "address"
              },
              {
                "internalType": "uint256[]",
                "name": "ids",
                "type": "uint256[]"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              }
            ],
            "name": "depositNFTs",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "enumerableERC20Template",
            "outputs": [
              {
                "internalType": "contract LSSVMPairEnumerableERC20",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "enumerableETHTemplate",
            "outputs": [
              {
                "internalType": "contract LSSVMPairEnumerableETH",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "potentialPair",
                "type": "address"
              },
              {
                "internalType": "enum ILSSVMPairFactoryLike.PairVariant",
                "name": "variant",
                "type": "uint8"
              }
            ],
            "name": "isPair",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "missingEnumerableERC20Template",
            "outputs": [
              {
                "internalType": "contract LSSVMPairMissingEnumerableERC20",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "missingEnumerableETHTemplate",
            "outputs": [
              {
                "internalType": "contract LSSVMPairMissingEnumerableETH",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "protocolFeeMultiplier",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "protocolFeeRecipient",
            "outputs": [
              {
                "internalType": "address payable",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract LSSVMRouter",
                "name": "",
                "type": "address"
              }
            ],
            "name": "routerStatus",
            "outputs": [
              {
                "internalType": "bool",
                "name": "allowed",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "wasEverAllowed",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract ICurve",
                "name": "bondingCurve",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "isAllowed",
                "type": "bool"
              }
            ],
            "name": "setBondingCurveAllowed",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address payable",
                "name": "target",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "isAllowed",
                "type": "bool"
              }
            ],
            "name": "setCallAllowed",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract LSSVMRouter",
                "name": "_router",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "isAllowed",
                "type": "bool"
              }
            ],
            "name": "setRouterAllowed",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract ERC20",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "withdrawERC20ProtocolFees",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "withdrawETHProtocolFees",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "stateMutability": "payable",
            "type": "receive"
          }
        ]
      },
      {
        "name": "PAIR_ROUTER",
        "address": "0x2b2e8cda09bba9660dca5cb6233787738ad68329",
        "abi": [
          {
            "inputs": [
              {
                "internalType": "contract ILSSVMPairFactoryLike",
                "name": "_factory",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [],
            "name": "factory",
            "outputs": [
              {
                "internalType": "contract ILSSVMPairFactoryLike",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract ERC20",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "enum ILSSVMPairFactoryLike.PairVariant",
                "name": "variant",
                "type": "uint8"
              }
            ],
            "name": "pairTransferERC20From",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract IERC721",
                "name": "nft",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "enum ILSSVMPairFactoryLike.PairVariant",
                "name": "variant",
                "type": "uint8"
              }
            ],
            "name": "pairTransferNFTFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "numItems",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapAny",
                    "name": "swapInfo",
                    "type": "tuple"
                  },
                  {
                    "internalType": "uint256",
                    "name": "maxCost",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct LSSVMRouter.RobustPairSwapAny[]",
                "name": "swapList",
                "type": "tuple[]"
              },
              {
                "internalType": "uint256",
                "name": "inputAmount",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "robustSwapERC20ForAnyNFTs",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remainingValue",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256[]",
                        "name": "nftIds",
                        "type": "uint256[]"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapSpecific",
                    "name": "swapInfo",
                    "type": "tuple"
                  },
                  {
                    "internalType": "uint256",
                    "name": "maxCost",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct LSSVMRouter.RobustPairSwapSpecific[]",
                "name": "swapList",
                "type": "tuple[]"
              },
              {
                "internalType": "uint256",
                "name": "inputAmount",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "robustSwapERC20ForSpecificNFTs",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remainingValue",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "contract LSSVMPair",
                            "name": "pair",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256[]",
                            "name": "nftIds",
                            "type": "uint256[]"
                          }
                        ],
                        "internalType": "struct LSSVMRouter.PairSwapSpecific",
                        "name": "swapInfo",
                        "type": "tuple"
                      },
                      {
                        "internalType": "uint256",
                        "name": "maxCost",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.RobustPairSwapSpecific[]",
                    "name": "tokenToNFTTrades",
                    "type": "tuple[]"
                  },
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "contract LSSVMPair",
                            "name": "pair",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256[]",
                            "name": "nftIds",
                            "type": "uint256[]"
                          }
                        ],
                        "internalType": "struct LSSVMRouter.PairSwapSpecific",
                        "name": "swapInfo",
                        "type": "tuple"
                      },
                      {
                        "internalType": "uint256",
                        "name": "minOutput",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.RobustPairSwapSpecificForToken[]",
                    "name": "nftToTokenTrades",
                    "type": "tuple[]"
                  },
                  {
                    "internalType": "uint256",
                    "name": "inputAmount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address payable",
                    "name": "tokenRecipient",
                    "type": "address"
                  },
                  {
                    "internalType": "address",
                    "name": "nftRecipient",
                    "type": "address"
                  }
                ],
                "internalType": "struct LSSVMRouter.RobustPairNFTsFoTokenAndTokenforNFTsTrade",
                "name": "params",
                "type": "tuple"
              }
            ],
            "name": "robustSwapERC20ForSpecificNFTsAndNFTsToToken",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remainingValue",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "outputAmount",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "numItems",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapAny",
                    "name": "swapInfo",
                    "type": "tuple"
                  },
                  {
                    "internalType": "uint256",
                    "name": "maxCost",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct LSSVMRouter.RobustPairSwapAny[]",
                "name": "swapList",
                "type": "tuple[]"
              },
              {
                "internalType": "address payable",
                "name": "ethRecipient",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "robustSwapETHForAnyNFTs",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remainingValue",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256[]",
                        "name": "nftIds",
                        "type": "uint256[]"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapSpecific",
                    "name": "swapInfo",
                    "type": "tuple"
                  },
                  {
                    "internalType": "uint256",
                    "name": "maxCost",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct LSSVMRouter.RobustPairSwapSpecific[]",
                "name": "swapList",
                "type": "tuple[]"
              },
              {
                "internalType": "address payable",
                "name": "ethRecipient",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "robustSwapETHForSpecificNFTs",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remainingValue",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "contract LSSVMPair",
                            "name": "pair",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256[]",
                            "name": "nftIds",
                            "type": "uint256[]"
                          }
                        ],
                        "internalType": "struct LSSVMRouter.PairSwapSpecific",
                        "name": "swapInfo",
                        "type": "tuple"
                      },
                      {
                        "internalType": "uint256",
                        "name": "maxCost",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.RobustPairSwapSpecific[]",
                    "name": "tokenToNFTTrades",
                    "type": "tuple[]"
                  },
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "contract LSSVMPair",
                            "name": "pair",
                            "type": "address"
                          },
                          {
                            "internalType": "uint256[]",
                            "name": "nftIds",
                            "type": "uint256[]"
                          }
                        ],
                        "internalType": "struct LSSVMRouter.PairSwapSpecific",
                        "name": "swapInfo",
                        "type": "tuple"
                      },
                      {
                        "internalType": "uint256",
                        "name": "minOutput",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.RobustPairSwapSpecificForToken[]",
                    "name": "nftToTokenTrades",
                    "type": "tuple[]"
                  },
                  {
                    "internalType": "uint256",
                    "name": "inputAmount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address payable",
                    "name": "tokenRecipient",
                    "type": "address"
                  },
                  {
                    "internalType": "address",
                    "name": "nftRecipient",
                    "type": "address"
                  }
                ],
                "internalType": "struct LSSVMRouter.RobustPairNFTsFoTokenAndTokenforNFTsTrade",
                "name": "params",
                "type": "tuple"
              }
            ],
            "name": "robustSwapETHForSpecificNFTsAndNFTsToToken",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remainingValue",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "outputAmount",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256[]",
                        "name": "nftIds",
                        "type": "uint256[]"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapSpecific",
                    "name": "swapInfo",
                    "type": "tuple"
                  },
                  {
                    "internalType": "uint256",
                    "name": "minOutput",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct LSSVMRouter.RobustPairSwapSpecificForToken[]",
                "name": "swapList",
                "type": "tuple[]"
              },
              {
                "internalType": "address payable",
                "name": "tokenRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "robustSwapNFTsForToken",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "outputAmount",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "contract LSSVMPair",
                    "name": "pair",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "numItems",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct LSSVMRouter.PairSwapAny[]",
                "name": "swapList",
                "type": "tuple[]"
              },
              {
                "internalType": "uint256",
                "name": "inputAmount",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "swapERC20ForAnyNFTs",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remainingValue",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "contract LSSVMPair",
                    "name": "pair",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256[]",
                    "name": "nftIds",
                    "type": "uint256[]"
                  }
                ],
                "internalType": "struct LSSVMRouter.PairSwapSpecific[]",
                "name": "swapList",
                "type": "tuple[]"
              },
              {
                "internalType": "uint256",
                "name": "inputAmount",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "swapERC20ForSpecificNFTs",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remainingValue",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "contract LSSVMPair",
                    "name": "pair",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "numItems",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct LSSVMRouter.PairSwapAny[]",
                "name": "swapList",
                "type": "tuple[]"
              },
              {
                "internalType": "address payable",
                "name": "ethRecipient",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "swapETHForAnyNFTs",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remainingValue",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "contract LSSVMPair",
                    "name": "pair",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256[]",
                    "name": "nftIds",
                    "type": "uint256[]"
                  }
                ],
                "internalType": "struct LSSVMRouter.PairSwapSpecific[]",
                "name": "swapList",
                "type": "tuple[]"
              },
              {
                "internalType": "address payable",
                "name": "ethRecipient",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "swapETHForSpecificNFTs",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remainingValue",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256[]",
                        "name": "nftIds",
                        "type": "uint256[]"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapSpecific[]",
                    "name": "nftToTokenTrades",
                    "type": "tuple[]"
                  },
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "numItems",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapAny[]",
                    "name": "tokenToNFTTrades",
                    "type": "tuple[]"
                  }
                ],
                "internalType": "struct LSSVMRouter.NFTsForAnyNFTsTrade",
                "name": "trade",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "inputAmount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "minOutput",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "swapNFTsForAnyNFTsThroughERC20",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "outputAmount",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256[]",
                        "name": "nftIds",
                        "type": "uint256[]"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapSpecific[]",
                    "name": "nftToTokenTrades",
                    "type": "tuple[]"
                  },
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "numItems",
                        "type": "uint256"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapAny[]",
                    "name": "tokenToNFTTrades",
                    "type": "tuple[]"
                  }
                ],
                "internalType": "struct LSSVMRouter.NFTsForAnyNFTsTrade",
                "name": "trade",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "minOutput",
                "type": "uint256"
              },
              {
                "internalType": "address payable",
                "name": "ethRecipient",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "swapNFTsForAnyNFTsThroughETH",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "outputAmount",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256[]",
                        "name": "nftIds",
                        "type": "uint256[]"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapSpecific[]",
                    "name": "nftToTokenTrades",
                    "type": "tuple[]"
                  },
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256[]",
                        "name": "nftIds",
                        "type": "uint256[]"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapSpecific[]",
                    "name": "tokenToNFTTrades",
                    "type": "tuple[]"
                  }
                ],
                "internalType": "struct LSSVMRouter.NFTsForSpecificNFTsTrade",
                "name": "trade",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "inputAmount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "minOutput",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "swapNFTsForSpecificNFTsThroughERC20",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "outputAmount",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256[]",
                        "name": "nftIds",
                        "type": "uint256[]"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapSpecific[]",
                    "name": "nftToTokenTrades",
                    "type": "tuple[]"
                  },
                  {
                    "components": [
                      {
                        "internalType": "contract LSSVMPair",
                        "name": "pair",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256[]",
                        "name": "nftIds",
                        "type": "uint256[]"
                      }
                    ],
                    "internalType": "struct LSSVMRouter.PairSwapSpecific[]",
                    "name": "tokenToNFTTrades",
                    "type": "tuple[]"
                  }
                ],
                "internalType": "struct LSSVMRouter.NFTsForSpecificNFTsTrade",
                "name": "trade",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "minOutput",
                "type": "uint256"
              },
              {
                "internalType": "address payable",
                "name": "ethRecipient",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "nftRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "swapNFTsForSpecificNFTsThroughETH",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "outputAmount",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "contract LSSVMPair",
                    "name": "pair",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256[]",
                    "name": "nftIds",
                    "type": "uint256[]"
                  }
                ],
                "internalType": "struct LSSVMRouter.PairSwapSpecific[]",
                "name": "swapList",
                "type": "tuple[]"
              },
              {
                "internalType": "uint256",
                "name": "minOutput",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "tokenRecipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              }
            ],
            "name": "swapNFTsForToken",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "outputAmount",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "stateMutability": "payable",
            "type": "receive"
          }
        ]
      }
    ]
  }
}